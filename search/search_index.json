{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#about-the-project","title":"About the Project","text":"<p>This project involves communicating from a computer to a Adafruit Trinket M0 board using Dart. The board is connected to our computer using the Micro USB port.</p> <p>Our goal is to talk to a R553 fingerprint sensor through the Trinket M0 board. Luckily, the sensor based its protocol on the Adafruit Fingerprint library, and we can use the library to communicate. Our Dart and Python code are developed to use most of the functions in the library and more importantly, send and receive fingerprint templates back to the computer.</p> <p>The project is a framework or proof of concept for a Biometric Verification System with templates store in a database that can be use to verify users/customers/clients/etc. The Dart language also enables the developement of a mobile app on Android or IOS to use this system.</p> <p>This project is done on Linux with Window or MacOS being technically possible but requires more work compiling libserialport library to their platform. We have no guarantee that it will work in Window or MacOS as it has not been tested by us.</p> <p>Update: Midway through the project, we discovered that the Trinket M0 is unable to receive fingeprint templates due to the limited 32KB of RAM. We have replaced it with the Raspberry Pi Pico with 264KB of RAM and now that functionality is available</p>"},{"location":"#getting-started","title":"Getting Started","text":"<p>This section described how to quickly set up the code and start communicating with trinket m0.</p> <ol> <li>Download Dart SDK</li> <li>Download the project files in Github</li> <li> <p>Navigate to the folder and download dependencies of dart code</p> <pre><code>    dart pub upgrade\n</code></pre> </li> <li> <p>Download libserialport (C) library using</p> <pre><code>    sudo apt install libserialport-dev\n</code></pre> </li> <li> <p>Copy code.py and lib folder into Trinket M0/Raspberry Pi Pico</p> </li> <li> <p>Run the dart code</p> <pre><code>    dart communicate_trinket_m0.dart\n</code></pre> </li> <li> <p>(Optional) If the Dart code shows that the board is in REPL when first booted up, use command 'reset' by typing it in the terminal to restart the python code.</p> </li> </ol>"},{"location":"#example","title":"Example","text":""},{"location":"#setup","title":"Setup","text":"Trinket M0 board connected to fingerprint sensor Raspberry Pi Pico connected to fingerprint sensor"},{"location":"#connecting-to-the-board","title":"Connecting to the board","text":"<pre><code>Anon:~/Desktop/trinket_m0_communicate$ dart communicate_trinket_m0.dart\nListing available ports...\nPort Number 1: /dev/ttyACM0\n    Description: Pico - E6605481DB635C34\n    Manufacturer: Raspberry Pi\n    Serial Number: E6605481DB635C34\n    Product ID: 0x80f4\n    Vendor ID: 0x239a\n    Read/Write Available: true\nDone\nPlease select fingerprint port number (-1 to exit or 0 to list all available port):\n</code></pre> <p>Note: If Read/Write Available is False, make sure to close any serial console/terminal that is talking to the board. Ex: Serial Console in Mu Editor</p> <pre><code>Please select fingerprint port number ...: 1\n    Port 1 selected.\n    Port Name: /dev/ttyACM0\n    Description: Pico - E6605481DB635C34\n    Manufacturer: Raspberry Pi\n    Serial Number: E6605481DB635C34\n    Product ID: 0x80f4\n    Vendor ID: 0x239a\n\n    Current Configuration of /dev/ttyACM0\n    Baud rate: 9600\n    Number of Data Bits: 8\n    Number of Parity Bits: -1\n    Number of Stop Bits: 1\n    Rts Cts: 1 0\n    Dsr Dtr: 0 1\n    XonXoff: 2\n\nSetting /dev/ttyACM0 to default config based on working config (Linux -&gt; trinket m0)\nSuccess!\n    Current Configuration of /dev/ttyACM0\n    Baud rate: 115200\n    Number of Data Bits: 8\n    Number of Parity Bits: 0\n    Number of Stop Bits: 1\n    Rts Cts: 1 0\n    Dsr Dtr: 0 1\n    XonXoff: 2\n\nDart: Fingerprint Commands:\n    1 -&gt; Enroll fingerprint\n    2 -&gt; Identify fingerprint\n    3 -&gt; Delete fingerprint\n    4 -&gt; Enroll and send template back via USB\n    5 -&gt; Upload template, get fingerprint and verify\n    6 -&gt; Clear all templates in sensor's library\n    stop -&gt; end communication with board and exit\n    reset -&gt; Rerun code python on board (Send Ctrl + D command)\n\nDisplaying output from board...\n]0;code.py | 8.2.9\\]0;code.py | 8.2.9\\\nERROR 87\nREADTEMPLATE 1 2 3 5 8\n&gt;\n</code></pre>"},{"location":"#on-board-codepy-operations","title":"On board code.py operations","text":"<ol> <li> <p>Enroll fingerprint</p> <pre><code>Displaying output from board...\n]0;code.py | 8.2.9\\]0;code.py | 8.2.9\\\nERROR 87\nREADTEMPLATE 1 2 3 5 8\n&gt;1 4\n1 4\nFINGERREQUEST\nFINGERHOLD\nOKIMAGE\nTEMPLATING\nOKTEMPLATE\nREMOVEFINGER\nFINGERREQUEST\nFINGERHOLD\nOKIMAGE\nTEMPLATING\nOKTEMPLATE\nCREATEMODEL\nOKMODEL\nSTOREMODEL\nOKSTORAGE\nREADTEMPLATE 1 2 3 4 5 8\n&gt;\n</code></pre> </li> <li> <p>Identify fingerprint</p> <pre><code>READTEMPLATE 1 2 3 4 5 8\n&gt;2\n2\nFINGERREQUEST\nOKIMAGE\nFINGERHOLD\nOKIMAGE\nTEMPLATING\nOKTEMPLATE\nSEARCHING\nOKSEARCH 4 100\nREADTEMPLATE 1 2 3 4 5 8\n&gt;\n</code></pre> </li> <li> <p>Delete fingerprint template (in sensor)</p> <pre><code>READTEMPLATE 1 2 3 4 5 8\n&gt;3 8\n3 8\nOKDELETE\nREADTEMPLATE 1 2 3 4 5\n&gt;\n</code></pre> </li> <li> <p>Download template to computer</p> <pre><code>&gt;4\n4\nFINGERREQUEST\nFINGERHOLD\nOKIMAGE\nTEMPLATING\nOKTEMPLATE\nREMOVEFINGER\nFINGERREQUEST\nFINGERHOLD\nOKIMAGE\nTEMPLATING\nOKTEMPLATE\nCREATEMODEL\nOKMODEL\nSTOREMODEL\nOKSTORAGE\nTEMPDOWNLOAD\nOKDOWNLOAD 2048\nb'46704c69...(long hex data here)'\nREADTEMPLATE 1 2 3 4 5\n&gt;\n</code></pre> </li> <li> <p>Upload template to sensor</p> <pre><code>READTEMPLATE 1 2 3 4 5\n&gt;5\n5\n46704c69...(long hex data here)\nFINGERREQUEST\nOKIMAGE\nFINGERHOLD\nOKIMAGE\nTEMPLATING\nOKTEMPLATE\nOKMATCH\nREADTEMPLATE 1 2 3 4 5\n&gt;\n</code></pre> </li> <li> <p>Clear all fingerprint template on sensor</p> <pre><code>READTEMPLATE 1 2 3 4 5\n&gt;6\n6\nOKDELETE\nREADTEMPLATE 0\n&gt;\n</code></pre> </li> </ol>"}]}